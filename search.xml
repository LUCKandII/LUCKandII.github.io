<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>RDclient远程连接</title>
    <url>/2021/04/29/2021/RDclient%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- TOC -->

<ul>
<li><a href="#1-%E5%AE%9E%E7%8E%B0%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85%E8%AE%BF%E9%97%AE%E8%87%AA%E5%B7%B1%E7%9A%84%E7%94%B5%E8%84%91%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2">1. 实现局域网内访问自己的电脑（远程桌面）</a><ul>
<li><a href="#11-%E5%BC%95%E5%AF%BC">1.1. 引导</a></li>
<li><a href="#12-win10%E5%AE%B6%E5%BA%AD%E7%89%88%E5%BC%80%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2">1.2. win10家庭版开远程桌面</a></li>
<li><a href="#13-ipad%E7%AB%AFrd-client%E9%85%8D%E7%BD%AE">1.3. ipad端RD client配置</a></li>
</ul>
</li>
<li><a href="#2-%E8%BF%9C%E7%A8%8B%E5%BC%80%E6%9C%BA">2. 远程开机</a><ul>
<li><a href="#21-wake-on-lan">2.1. Wake On LAN</a></li>
<li><a href="#22-wake-on-wlan">2.2. Wake On WLAN</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<a href="/2021/07/04/2021/%E6%A0%91%E8%8E%93%E6%B4%BE&python%E6%80%BB%E7%BB%93/" title="通往文章的链接1">通往文章的链接1</a>

<a href="/2021/02/21/2021/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/" title="通往文章的链接2">通往文章的链接2</a>


<h1 id="1-实现局域网内访问自己的电脑（远程桌面）"><a href="#1-实现局域网内访问自己的电脑（远程桌面）" class="headerlink" title="1. 实现局域网内访问自己的电脑（远程桌面）"></a>1. 实现局域网内访问自己的电脑（远程桌面）</h1><h2 id="1-1-引导"><a href="#1-1-引导" class="headerlink" title="1.1. 引导"></a>1.1. 引导</h2><p><a href="https://zhuanlan.zhihu.com/p/266109987">frp+远程桌面+RDclient</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/266109987">frp+远程桌面+RDclient</a></p>
<h2 id="1-2-win10家庭版开远程桌面"><a href="#1-2-win10家庭版开远程桌面" class="headerlink" title="1.2. win10家庭版开远程桌面"></a>1.2. win10家庭版开远程桌面</h2><p><a href="https://github.com/stascorp/rdpwrap">github:rdpwrap</a></p>
<p><a href="https://github.com/stascorp/rdpwrap/releases">github:rdpwrap:releases</a></p>
<p><a href="https://github.com/stascorp/rdpwrap/issues/860">github:rdpwrap:issue</a></p>
<p><a href="https://github.com/LCW0NJUPT/rdpwrap-autoupdate">github:rdpwrap-autoupdate</a></p>
<ol>
<li><p> 我下载了“ RDPWrap-v1.6.2.zip ”，并将文件放在C：\ Program Files \ RDP Wrapper中</p>
</li>
<li><p> 然后我下载了“ autoupdate-v07.09.2019.zip ”，将内容放在C：\ Program Files \ RDP Wrapper中</p>
</li>
<li><p> 然后，我以管理员身份运行cmd并运行“ autoupdate.bat ”</p>
</li>
<li><p> RDPConf全绿即可</p>
</li>
</ol>
<h2 id="1-3-ipad端RD-client配置"><a href="#1-3-ipad端RD-client配置" class="headerlink" title="1.3. ipad端RD client配置"></a>1.3. ipad端RD client配置</h2><img src="/2021/04/29/2021/RDclient%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/RDclient远程连接_端口转发配置.png" width="100%">

<img src="/2021/04/29/2021/RDclient%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/RDclient远程连接_同一局域网连接.png" width="50%">

<img src="/2021/04/29/2021/RDclient%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/RDclient远程连接_校园网内连接.png" width="50%">


<h1 id="2-远程开机"><a href="#2-远程开机" class="headerlink" title="2. 远程开机"></a>2. 远程开机</h1><h2 id="2-1-Wake-On-LAN"><a href="#2-1-Wake-On-LAN" class="headerlink" title="2.1. Wake On LAN"></a>2.1. Wake On LAN</h2><p><a href="https://zhuanlan.zhihu.com/p/107387999?ivk_sa=1024320u">知乎参考教程</a></p>
<p>文末的参考链接非常齐全</p>
<ul>
<li><p>  pc 进入 BIOS 模式，找到 wake on lan 选项，选择“ensable”或者其他开启选项。e570 的默认选项为“AC only”（只有充电时开启）。你也可以设置成“AC and Battery”（充电和使用电池都开启）。</p>
</li>
<li><p>  pc 开机，进入“设备管理器”，点击“网络适配器”，双击工作中的网卡，点击“电源管理”，勾选“此设备唤醒计算机”，点击“高级”，点击“魔术封包唤醒”，选择“启用”。</p>
</li>
<li><p>  进入“防火墙”，点击右侧的“新建规则”，选择“端口”，选择“udp”，在“特定端口”一栏输入“9”。“配置文件”选择“公用”。确定即可。</p>
</li>
<li><p>  在其他设备唤醒主机</p>
</li>
</ul>
<h2 id="2-2-Wake-On-WLAN"><a href="#2-2-Wake-On-WLAN" class="headerlink" title="2.2. Wake On WLAN"></a>2.2. Wake On WLAN</h2><p><a href="https://www.binss.me/blog/wake-windows-10-laptop-by-WLAN/">关于Wake-on-WLAN的一些讨论</a></p>
<p>无线网卡的远程唤醒，资料太少，不知如何实现。暂时就让电脑不要关机好了。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World.This is my blog test!push to github and gitee</title>
    <url>/2021/01/17/2021/hello_world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a>

<h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>hexo配置与使用</title>
    <url>/2021/01/17/2021/hexo_introduction/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- TOC -->

<ul>
<li><a href="#1-hexo%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8">1. hexo的配置和使用</a><ul>
<li><a href="#11-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5">1.1. 参考链接</a></li>
<li><a href="#12-%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87">1.2. 插入图片：</a><ul>
<li><a href="#121-%E7%BD%91%E7%BB%9C%E6%95%99%E7%A8%8B">1.2.1. 网络教程</a></li>
<li><a href="#122-%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6">1.2.2. 安装插件</a></li>
<li><a href="#123-%E6%94%B9%E8%AE%BE%E7%BD%AE">1.2.3. 改设置</a></li>
<li><a href="#124-%E4%BB%A3%E7%A0%81%E6%9B%BF%E6%8D%A2">1.2.4. 代码替换</a></li>
<li><a href="#125-%E5%BC%95%E7%94%A8%E6%96%B9%E5%BC%8F">1.2.5. 引用方式</a></li>
<li><a href="#126-%E7%A1%AE%E5%AE%9A%E7%9A%84%E8%A7%84%E8%8C%83%E7%9A%84%E5%9B%BE%E7%89%87%E5%BC%95%E7%94%A8%E6%96%B9%E6%B3%95">1.2.6. 确定的规范的图片引用方法：</a></li>
</ul>
</li>
<li><a href="#13-%E5%8A%A0%E5%AF%86%E6%96%87%E6%A1%A3">1.3. 加密文档</a></li>
</ul>
</li>
<li><a href="#2-%E6%9C%80%E5%B8%B8%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4">2. 最常用的命令</a></li>
</ul>
<!-- /TOC -->

<h1 id="1-hexo的配置和使用"><a href="#1-hexo的配置和使用" class="headerlink" title="1. hexo的配置和使用"></a>1. hexo的配置和使用</h1><h2 id="1-1-参考链接"><a href="#1-1-参考链接" class="headerlink" title="1.1. 参考链接"></a>1.1. 参考链接</h2><p><a href="https://hexo.io/">hexo官方网站</a></p>
<p><a href="https://www.bilibili.com/video/BV1cW411A7Jx?p=1">B站的不错的视频教程</a></p>
<p><a href="http://theme-next.iissnan.com/">next主题的中文文档</a></p>
<p><a href="https://github.com/theme-next/hexo-theme-next">next主题的Github</a></p>
<p><a href="https://gitee.com/help/articles/4136#article-header0">Gitee Pages的指导</a></p>
<p><a href="https://github.com/litten/hexo-theme-yilia">Yilia主题的Github及说明</a></p>
<p><a href="https://shen-yu.gitee.io/2019/ayer/">Ayer主题的使用说明</a></p>
<p><a href="https://github.com/fluid-dev/hexo-theme-fluid"><strong>Fluid主题，最终使用的主题</strong></a></p>
<p><a href="https://hexo.io/themes/">hexo官网给出的模板</a></p>
<h2 id="1-2-插入图片："><a href="#1-2-插入图片：" class="headerlink" title="1.2. 插入图片："></a>1.2. 插入图片：</h2><a id="more"></a>

<h3 id="1-2-1-网络教程"><a href="#1-2-1-网络教程" class="headerlink" title="1.2.1. 网络教程"></a>1.2.1. 网络教程</h3><p><a href="https://www.jianshu.com/p/f72aaad7b852">hexo插入图片，简书上的教材</a></p>
<h3 id="1-2-2-安装插件"><a href="#1-2-2-安装插件" class="headerlink" title="1.2.2. 安装插件"></a>1.2.2. 安装插件</h3><pre><code><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install hexo-asset-image --save<br></code></pre></td></tr></table></figure></code></pre>
<h3 id="1-2-3-改设置"><a href="#1-2-3-改设置" class="headerlink" title="1.2.3. 改设置"></a>1.2.3. 改设置</h3><p>打开hexo的配置文件<code>_config.yml</code>，找到<code>post_asset_folder</code>，把这个选项从false改成true</p>
<h3 id="1-2-4-代码替换"><a href="#1-2-4-代码替换" class="headerlink" title="1.2.4. 代码替换"></a>1.2.4. 代码替换</h3><p><code>/node_modules/hexo-asset-image/index.js</code>的代码替换为：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-meta">&#x27;use strict&#x27;</span>;<br><span class="hljs-keyword">var</span> cheerio = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;cheerio&#x27;</span>);<br><br><span class="hljs-comment">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getPosition</span>(<span class="hljs-params">str, m, i</span>) </span>&#123;<br><span class="hljs-keyword">return</span> str.split(m, i).join(m).length;<br>&#125;<br><br><span class="hljs-keyword">var</span> version = <span class="hljs-built_in">String</span>(hexo.version).split(<span class="hljs-string">&#x27;.&#x27;</span>);<br>hexo.extend.filter.register(<span class="hljs-string">&#x27;after_post_render&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">data</span>)</span>&#123;<br><span class="hljs-keyword">var</span> config = hexo.config;<br><span class="hljs-keyword">if</span>(config.post_asset_folder)&#123;<br>        <span class="hljs-keyword">var</span> link = data.permalink;<br>    <span class="hljs-keyword">if</span>(version.length &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">Number</span>(version[<span class="hljs-number">0</span>]) == <span class="hljs-number">3</span>)<br>    <span class="hljs-keyword">var</span> beginPos = getPosition(link, <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-number">1</span>) + <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">var</span> beginPos = getPosition(link, <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-number">3</span>) + <span class="hljs-number">1</span>;<br>    <span class="hljs-comment">// In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;.</span><br>    <span class="hljs-keyword">var</span> endPos = link.lastIndexOf(<span class="hljs-string">&#x27;/&#x27;</span>) + <span class="hljs-number">1</span>;<br>    link = link.substring(beginPos, endPos);<br><br>    <span class="hljs-keyword">var</span> toprocess = [<span class="hljs-string">&#x27;excerpt&#x27;</span>, <span class="hljs-string">&#x27;more&#x27;</span>, <span class="hljs-string">&#x27;content&#x27;</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; toprocess.length; i++)&#123;<br>    <span class="hljs-keyword">var</span> key = toprocess[i];<br><br>    <span class="hljs-keyword">var</span> $ = cheerio.load(data[key], &#123;<br>        ignoreWhitespace: <span class="hljs-literal">false</span>,<br>        xmlMode: <span class="hljs-literal">false</span>,<br>        lowerCaseTags: <span class="hljs-literal">false</span>,<br>        decodeEntities: <span class="hljs-literal">false</span><br>    &#125;);<br><br>    $(<span class="hljs-string">&#x27;img&#x27;</span>).each(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span> ($(<span class="hljs-built_in">this</span>).attr(<span class="hljs-string">&#x27;src&#x27;</span>))&#123;<br>            <span class="hljs-comment">// For windows style path, we replace &#x27;\&#x27; to &#x27;/&#x27;.</span><br>            <span class="hljs-keyword">var</span> src = $(<span class="hljs-built_in">this</span>).attr(<span class="hljs-string">&#x27;src&#x27;</span>).replace(<span class="hljs-string">&#x27;\\&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>);<br>            <span class="hljs-keyword">if</span>(!<span class="hljs-regexp">/http[s]*.*|\/\/.*/</span>.test(src) &amp;&amp;<br>            !<span class="hljs-regexp">/^\s*\//</span>.test(src)) &#123;<br>            <span class="hljs-comment">// For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed.</span><br>            <span class="hljs-comment">// In addition, to support multi-level local directory.</span><br>            <span class="hljs-keyword">var</span> linkArray = link.split(<span class="hljs-string">&#x27;/&#x27;</span>).filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">elem</span>)</span>&#123;<br>                <span class="hljs-keyword">return</span> elem != <span class="hljs-string">&#x27;&#x27;</span>;<br>            &#125;);<br>            <span class="hljs-keyword">var</span> srcArray = src.split(<span class="hljs-string">&#x27;/&#x27;</span>).filter(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">elem</span>)</span>&#123;<br>                <span class="hljs-keyword">return</span> elem != <span class="hljs-string">&#x27;&#x27;</span> &amp;&amp; elem != <span class="hljs-string">&#x27;.&#x27;</span>;<br>            &#125;);<br>            <span class="hljs-keyword">if</span>(srcArray.length &gt; <span class="hljs-number">1</span>)<br>                srcArray.shift();<br>            src = srcArray.join(<span class="hljs-string">&#x27;/&#x27;</span>);<br>            $(<span class="hljs-built_in">this</span>).attr(<span class="hljs-string">&#x27;src&#x27;</span>, config.root + link + src);<br>            <span class="hljs-built_in">console</span>.info&amp;&amp;<span class="hljs-built_in">console</span>.info(<span class="hljs-string">&quot;update link as:--&gt;&quot;</span>+config.root + link + src);<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-built_in">console</span>.info&amp;&amp;<span class="hljs-built_in">console</span>.info(<span class="hljs-string">&quot;no src attr, skipped...&quot;</span>);<br>            <span class="hljs-built_in">console</span>.info&amp;&amp;<span class="hljs-built_in">console</span>.info($(<span class="hljs-built_in">this</span>));<br>        &#125;<br>    &#125;);<br>    data[key] = $.html();<br>    &#125;<br>&#125;<br>&#125;);<br></code></pre></td></tr></table></figure>
<h3 id="1-2-5-引用方式"><a href="#1-2-5-引用方式" class="headerlink" title="1.2.5. 引用方式"></a>1.2.5. 引用方式</h3><p>创建新文章时，顺便创建相同名字的文件夹，也就是文章资源文件夹，如在一个文件目录下，博客名为<code>A.md</code>，相应的存在一个<code>A</code>文件夹存放图片<code>image.jpg</code>，引用时：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><code class="hljs md">![<span class="hljs-string">描述</span>](<span class="hljs-link">image.png</span>)，这样就能正确显示在网页上，但是markdown预览不正常。<br>![<span class="hljs-string">描述</span>](<span class="hljs-link">./A/image.png</span>)，这样markdown预览正确，但是显示在网页上不正常。<br></code></pre></td></tr></table></figure>
<p>就统一使用<code>![描述-图片](XXXimage.png)</code>的方式命名，之后再编辑器里面ctrl+f查找 <code>-图片](</code> 统一替换或者加入文件夹的名称即可</p>
<p><img src="/2021/01/17/2021/hexo_introduction/hexo%E4%B8%BB%E9%A1%B5.png" alt="hexo主页图片"></p>
<p><img src="/2021/01/17/2021/hexo_introduction/hexo%E4%B8%BB%E9%A1%B51.png" alt="hexo主页图片1"></p>
<h3 id="1-2-6-确定的规范的图片引用方法："><a href="#1-2-6-确定的规范的图片引用方法：" class="headerlink" title="1.2.6. 确定的规范的图片引用方法："></a>1.2.6. 确定的规范的图片引用方法：</h3><p>使用<a href="https://marketplace.visualstudio.com/items?itemName=mushan.vscode-paste-image&ssr=false#overview">PasteImage</a><br>插件，配置如下：</p>
<figure class="highlight"><table><tr><td class="code"><pre><code class="hljs json">&quot;pasteImage.basePath&quot;: &quot;$&#123;currentFileDir&#125;&quot;, // 引用图片文件的路径<br>&quot;pasteImage.namePrefix&quot;: &quot;$&#123;currentFileNameWithoutExt&#125;_&quot;,   // 图片文件名的前缀为文章名<br>&quot;pasteImage.forceUnixStyleSeparator&quot;: true,<br>&quot;pasteImage.insertPattern&quot;: &quot;&lt;img src=&quot;$&#123;imageFilePath&#125;&quot; width=&quot;100%&quot;&gt;&quot; // 插入图片的方式，这里使用html样式，方便调节大小<br>&quot;pasteImage.path&quot;: &quot;$&#123;currentFileDir&#125;/$&#123;currentFileNameWithoutExt&#125;&quot;,    // 图片文件保存的地方，保存在同文章名的文件夹<br>&quot;pasteImage.prefix&quot;: &quot;&quot; // 引用图片时的前缀<br></code></pre></td></tr></table></figure>
<!-- ![](hexo_introduction/hexo_introduction_base%20path.png) -->
<img src="/2021/01/17/2021/hexo_introduction/hexo_introduction_base%20path.png" width="40%">

<!-- ![](hexo_introduction/hexo_introduction_本地图片文件命名.png) -->
<img src="/2021/01/17/2021/hexo_introduction/hexo_introduction_本地图片文件命名.png" width="50%">

<!-- ![](hexo_introduction/hexo_introduction_path.png) -->
<img src="/2021/01/17/2021/hexo_introduction/hexo_introduction_path.png" width="40%">

<img src="/2021/01/17/2021/hexo_introduction/hexo_introduction_path.png" width="50%">

<img src="/2021/01/17/2021/hexo_introduction/hexo_introduction_insert%20pattern.png" width="50%">

<p>使用html格式插入，部署之前就不需要更改路径，特别方便。</p>
<p>注意html格式插入的图片是紧密结合的。</p>
<h2 id="1-3-加密文档"><a href="#1-3-加密文档" class="headerlink" title="1.3. 加密文档"></a>1.3. 加密文档</h2><p>使用<a href="https://github.com/D0n9X1n/hexo-blog-encrypt#about-callback">hexo-blog-encrypt</a></p>
<p>已知的问题：导致目录显示不正确，<a href="https://github.com/fluid-dev/hexo-theme-fluid/issues/339">Fluid主题里面的issue</a>，我的暂时还没有解决。</p>
<p><a href="https://yuyuforest.com/2018/10/18/encrypt-toc/">可以学习一下的解决方式</a></p>
<p>使用了加密功能后，全站的代码一键复制功能失效。</p>
<h1 id="2-最常用的命令"><a href="#2-最常用的命令" class="headerlink" title="2. 最常用的命令"></a>2. 最常用的命令</h1><p>生成：</p>
<pre><code>hexo g</code></pre>
<p>本地预览：在浏览器输入<code>localhost:5000</code></p>
<pre><code>hexo server -p 5000</code></pre>
<p>部署</p>
<pre><code>hexo d</code></pre>
<figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;left&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">https://XXXX.png</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;XXXX.png&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100%&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure>
<figure class="highlight md"><table><tr><td class="code"><pre><code class="hljs md">---<br>title: 文章标题<br>date: 2021-01-17 16:00:00<br>toc: true<br>tags: <br><span class="hljs-code">    # [&#x27;技术&#x27;]</span><br><span class="hljs-code">categories: </span><br><span class="hljs-code">    - 学习</span><br><span class="hljs-code">hide: false</span><br><span class="hljs-code"></span><br><span class="hljs-code">excerpt: 这是摘要</span><br><span class="hljs-code">index_img: /img/example.jpg # 文章在首页的封面图</span><br><span class="hljs-code">banner_img: /img/post_banner.jpg # 文章页顶部大图</span><br><span class="hljs-code"></span><br><span class="hljs-code">abstract: 加密内容在解密前的摘要.</span><br><span class="hljs-code">password: hello</span><br><span class="hljs-code">---</span><br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派基础使用</title>
    <url>/2021/02/21/2021/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- TOC -->

<ul>
<li><a href="#1-%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD%E4%B8%8E%E7%83%A7%E5%86%99">1. 镜像下载与烧写</a></li>
<li><a href="#2-%E5%AE%98%E6%96%B9%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">2. 官方系统使用指南</a><ul>
<li><a href="#21-%E5%AE%98%E6%96%B9%E9%95%9C%E5%83%8F%E4%BC%98%E7%82%B9">2.1. 官方镜像优点</a></li>
<li><a href="#22-%E7%83%A7%E5%86%99%E9%95%9C%E5%83%8F%E6%B7%BB%E5%8A%A0ssh%E7%A9%BA%E7%99%BD%E6%96%87%E4%BB%B6%E5%88%B0boot%E7%9B%98%E9%A2%84%E5%9F%8Bwifi">2.2. 烧写镜像，添加SSH空白文件到boot盘，预埋wifi</a></li>
<li><a href="#23-%E6%89%BE%E5%88%B0%E6%A0%91%E8%8E%93%E6%B4%BE%E7%9A%84wifi">2.3. 找到树莓派的WiFi</a></li>
<li><a href="#24-%E8%BF%9B%E5%85%A5%E7%B3%BB%E7%BB%9F%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE">2.4. 进入系统基本配置</a></li>
<li><a href="#25-%E5%85%B6%E4%BB%96%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97">2.5. 其他使用指南</a><ul>
<li><a href="#251-%E6%8D%A2%E9%98%BF%E9%87%8C%E6%BA%90">2.5.1. 换阿里源</a></li>
<li><a href="#252-%E5%8F%AF%E8%A7%86%E5%8C%96%E7%9A%84%E8%B5%84%E6%BA%90%E6%98%BE%E7%A4%BA%E5%99%A8neofetch">2.5.2. 可视化的资源显示器neofetch</a></li>
<li><a href="#253-%E5%AE%89%E8%A3%85%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E6%B3%95">2.5.3. 安装中文输入法</a></li>
<li><a href="#254-%E7%A6%81%E7%94%A8%E4%BC%91%E7%9C%A0">2.5.4. 禁用休眠</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#3-%E5%85%B6%E4%BB%96%E5%8A%9F%E8%83%BD">3. 其他功能</a><ul>
<li><a href="#31-pscp%E5%B7%A5%E5%85%B7">3.1. pscp工具</a></li>
<li><a href="#32-samba%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%86%E4%BA%AB%E7%BB%99windows">3.2. samba共享文件夹，树莓派分享给windows</a></li>
<li><a href="#33-%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB">3.3. 资料汇总</a></li>
</ul>
</li>
</ul>
<!-- /TOC -->

<h1 id="1-镜像下载与烧写"><a href="#1-镜像下载与烧写" class="headerlink" title="1. 镜像下载与烧写"></a>1. 镜像下载与烧写</h1><p><a href="https://www.raspberrypi.org/downloads/">树莓派镜像烧写工具</a></p>
<p><a href="https://www.raspberrypi.org/downloads/raspberry-pi-os/">树莓派官方系统镜像</a><br>镜像比较大，最好把种子下载下来然后再用下载工具下载</p>
<p><a href="https://ubuntu.com/download/raspberry-pi">树莓派的ubuntu</a><br>注意用的是desktop版本还是server版本</p>
<h1 id="2-官方系统使用指南"><a href="#2-官方系统使用指南" class="headerlink" title="2. 官方系统使用指南"></a>2. 官方系统使用指南</h1><h2 id="2-1-官方镜像优点"><a href="#2-1-官方镜像优点" class="headerlink" title="2.1. 官方镜像优点"></a>2.1. 官方镜像优点</h2><p>内置SSH，VNC，Chrome（旧版），大量软件，桌面环境运行较流畅</p>
<p><a href="https://www.bilibili.com/video/BV1t64y1M7RA?t=150">一个很好的指导</a></p>
<h2 id="2-2-烧写镜像，添加SSH空白文件到boot盘，预埋wifi"><a href="#2-2-烧写镜像，添加SSH空白文件到boot盘，预埋wifi" class="headerlink" title="2.2. 烧写镜像，添加SSH空白文件到boot盘，预埋wifi"></a>2.2. 烧写镜像，添加SSH空白文件到boot盘，预埋wifi</h2><p>新建wpa_supplicant.conf，priority越大优先级越高，放入boot盘</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs conf">country&#x3D;CN<br>ctrl_interface&#x3D;DIR&#x3D;&#x2F;var&#x2F;run&#x2F;wpa_supplicant GROUP&#x3D;netdev<br>update_config&#x3D;1<br><br>network&#x3D;&#123;<br>    ssid&#x3D;&quot;RM701_LAN&quot;<br>    psk&#x3D;&quot;XXXXX&quot;<br>    key_mgmt&#x3D;WPA-PSK<br>    priority&#x3D;2<br>&#125;<br><br>network&#x3D;&#123;<br>    ssid&#x3D;&quot;HomeAssistant&quot;<br>    psk&#x3D;&quot;XXX&quot;<br>    key_mgmt&#x3D;WPA-PSK<br>    priority&#x3D;1<br>&#125;<br></code></pre></td></tr></table></figure>
<p>有屏幕和键盘的可以不用预埋wifi，有网线的可以连接到电脑，开机之后通过ssh设置WiFi。</p>
<h2 id="2-3-找到树莓派的WiFi"><a href="#2-3-找到树莓派的WiFi" class="headerlink" title="2.3. 找到树莓派的WiFi"></a>2.3. 找到树莓派的WiFi</h2><ol>
<li><p>网线连接到电脑，使用再cmd使用命令</p>
<p> arp -a</p>
</li>
</ol>
<p>有线的端口的就是树莓派的，一般是192.168.137.1之类的</p>
<p><a href="https://shumeipai.nxez.com/2013/10/15/raspberry-pi-and-a-network-cable-directly-connected-laptop.html">树莓派+一根网线直连笔记本电脑</a></p>
<ol start="2">
<li><p>没有网线，进入路由器的管理界面</p>
<pre><code> 192.168.1.1     //tp-link的管理界面
 192.168.31.1    //红米路由器
 //具体看自己的路由器情况和所在网络的网段</code></pre>
</li>
<li><p> 其他工具，如安卓手机上面的fing，或者安卓手机使用终端模拟器执行<code>ip neigh</code>命令，与电脑的<code>arp - a</code>效果相同。树莓派连到手机热点的时候这样查看ip最方便。</p>
</li>
</ol>
<h2 id="2-4-进入系统基本配置"><a href="#2-4-进入系统基本配置" class="headerlink" title="2.4. 进入系统基本配置"></a>2.4. 进入系统基本配置</h2><blockquote>
<p>有屏幕：更改屏幕设置（大黑边问题）</p>
</blockquote>
<blockquote>
<p>没有屏幕：ssh连接，默认pi，raspberry</p>
</blockquote>
<blockquote>
<p>进入raspi-config，命令是</p>
</blockquote>
<pre><code>sudo raspi-config</code></pre>
<blockquote>
<p>设置VNC开启<br>在第五点5 interfacing options  —&gt;  VNC</p>
</blockquote>
<p><a href="https://blog.csdn.net/qq_42612147/article/details/100073650">vnc viewer 显示 cannot currently show the desktop 的解决方法</a></p>
<blockquote>
<p>进入图像化界面进行初始化配置，设置地区语言，登陆密码之类的。</p>
</blockquote>
<blockquote>
<p>设置静态IP，在已经开启vnc的情况下可以连接vnc进行配置，注意经常设备不是固定使用的情况下不要设置静态ip，因为不同网络环境下网段会变。</p>
</blockquote>
<pre><code>sudo nano /etc/dhcpcd.conf
# 添加以下内容
interfac wlan0
static ip_address=192.168.X.X
static routers=192.168.X.X</code></pre>
<h2 id="2-5-其他使用指南"><a href="#2-5-其他使用指南" class="headerlink" title="2.5. 其他使用指南"></a>2.5. 其他使用指南</h2><h3 id="2-5-1-换阿里源"><a href="#2-5-1-换阿里源" class="headerlink" title="2.5.1. 换阿里源"></a>2.5.1. 换阿里源</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 第一个文件</span><br>sudo nano /etc/apt/sources.list<br><span class="hljs-comment"># 将原有内容用#注释掉</span><br>deb http://mirrors.aliyun.com/raspbian/raspbian/ buster main contrib non-free rpi<br>deb-src http://mirrors.aliyun.com/raspbian/raspbian/ buster main contrib non-free rpi<br><br><span class="hljs-comment"># 第二个文件</span><br>sudo nano /etc/apt/sources.list.d/raspi.list<br><span class="hljs-comment"># 将原有内容用#注释掉</span><br>deb http://mirrors.aliyun.com/raspbian/raspbian/ buster main<br>deb-src http://mirrors.aliyun.com/raspbian/raspbian/ buster main<br><br><span class="hljs-comment"># 执行更新</span><br>sudo apt-get update<br>sudo apt-get upgrade<br></code></pre></td></tr></table></figure>
<p>提示重复配置可以把 <code>/etc/apt/sources.list.d/raspi.list</code> 里面的源删掉，只留一个文件有源就可以。</p>
<h3 id="2-5-2-可视化的资源显示器neofetch"><a href="#2-5-2-可视化的资源显示器neofetch" class="headerlink" title="2.5.2. 可视化的资源显示器neofetch"></a>2.5.2. 可视化的资源显示器neofetch</h3><p>在换完源，执行完更新的情况下执行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装neotetch</span><br>sudo aptitude install neofetch<br><span class="hljs-comment"># 配置neotetch，需要显示的东西取消注释即可</span><br>sudo nano .config/neofetch/config.conf<br></code></pre></td></tr></table></figure>

<h3 id="2-5-3-安装中文输入法"><a href="#2-5-3-安装中文输入法" class="headerlink" title="2.5.3. 安装中文输入法"></a>2.5.3. 安装中文输入法</h3><p><a href="https://shumeipai.nxez.com/2016/03/13/how-to-make-raspberry-pi-display-chinese.html">树莓派实验室关于安装中文输入法</a></p>
<p><a href="https://www.jianshu.com/p/84cb45bbef63">显示中文和安装中文输入法</a></p>
<pre><code># 字库
sudo apt-get install ttf-wqy-zenhei
#输入法
sudo apt-get install scim-pinyin

#配置
sudo raspi-config</code></pre>
<p>localisation Options –&gt; change Locale ，一直按方向下键，按空格选择 zh_CN GB2312 , zh_CN.GB18030 GB18030 , zh_CN.GBK GBK , zh_CN.UTF-8 UTF-8 四个选项，左边出现＊号即为选中，按回车确认。</p>
<p>确认后，选择zh_CN.UTF-8,回车确认</p>
<h3 id="2-5-4-禁用休眠"><a href="#2-5-4-禁用休眠" class="headerlink" title="2.5.4. 禁用休眠"></a>2.5.4. 禁用休眠</h3><p><a href="https://www.cnblogs.com/xiaoqianbook/p/11945271.html">一个很好的博客</a></p>
<pre><code>sudo nano /etc/lightdm/lightdm.conf</code></pre>
<p>找到[Seat:*]这一项，在下面的‘#xserver-command=X’删除前面的注释符#，修改为以下</p>
<pre><code>xserver-command=X -s 0-dpms</code></pre>
<p>其中，-s 参数：设置屏幕保护不启动，0 数字零，-dpms 参数：关闭电源节能管理。</p>
<h1 id="3-其他功能"><a href="#3-其他功能" class="headerlink" title="3. 其他功能"></a>3. 其他功能</h1><h2 id="3-1-pscp工具"><a href="#3-1-pscp工具" class="headerlink" title="3.1. pscp工具"></a>3.1. pscp工具</h2><p>windows发送文件到树莓派上面，注意斜杠和反斜杠</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">pscp -P 22 c:\文件完整路径 pi@IP地址:/home/git/<br></code></pre></td></tr></table></figure>
<h2 id="3-2-samba共享文件夹，树莓派分享给windows"><a href="#3-2-samba共享文件夹，树莓派分享给windows" class="headerlink" title="3.2. samba共享文件夹，树莓派分享给windows"></a>3.2. samba共享文件夹，树莓派分享给windows</h2><p>搜索关键词<code>局域网内Windows和linux系统如何共享文件</code>，<code>SAMBA共享文件</code></p>
<p>安装samba 和 samba-common-bin</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-builtin-name">get</span> update<br>sudo apt-<span class="hljs-builtin-name">get</span> install samba samba-common-bin<br></code></pre></td></tr></table></figure>
<p>配置samba服务 ：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">sudo nano <span class="hljs-regexp">/etc/</span>samba/smb.conf<br></code></pre></td></tr></table></figure>
<p>跳到最后一行，加入如下语句：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><code class="hljs conf">[MyNAS]<br>    # 说明信息<br>    comment &#x3D; NAS Storage<br>    # 可以访问的用户<br>    valid users &#x3D; pi,root<br>    # 共享文件的路径,raspberry pi 会自动将连接到其上的外接存储设备挂载到&#x2F;media&#x2F;pi&#x2F;目录下。注意这个目录要存在才可访问<br>    path &#x3D; &#x2F;media&#x2F;pi&#x2F;<br>    # 可被其他人看到资源名称（非内容）<br>    browseable &#x3D; yes<br>    # 可写<br>    writable &#x3D; yes<br>    readonly &#x3D; no<br>    # 新建文件的权限为 664<br>    create mask &#x3D; 0664<br>    # 新建目录的权限为 775<br>    directory mask &#x3D; 0775<br></code></pre></td></tr></table></figure>
<p>samba用户权限配置，如果失败，先把<code>sudo apt-get remove samba </code>，然后再考虑<code>sudo apt-get autoremove</code>，再重装一遍</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><code class="hljs livecodeserver">sudo sambapasswd -<span class="hljs-keyword">a</span> <span class="hljs-literal">pi</span><br><span class="hljs-comment"># 提示找不到命令则试试</span><br>sudo smbpasswd -<span class="hljs-keyword">a</span> <span class="hljs-literal">pi</span><br></code></pre></td></tr></table></figure>
<p>输入新设置samba密码，为了安全性尽量不要和已经存在的pi密码重复。</p>
<p>重启服务: <code>sudo /etc/init.d/smbd restart</code></p>
<p>设置开机自启动，编辑<code>sudo nano /etc/rc.local</code>，在exit0前加上<code>sudo /etc/init.d/smbd restart</code></p>
<p>有的网上的比较老的教程是<code>sudo /etc/init.d/samba restart</code>，就不适用了。</p>
<p>在windows打开“计算机”——&gt;在网络位置””空白处右键“添加一个网络位置”，按向导做即可。</p>
<h2 id="3-3-资料汇总"><a href="#3-3-资料汇总" class="headerlink" title="3.3. 资料汇总"></a>3.3. 资料汇总</h2><p><a href="https://github.com/xinxingli/Raspberry-Pi">一个树莓派学习资料汇总的网页</a></p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
</search>
